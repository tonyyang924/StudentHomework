import com.android.ide.common.signing.KeytoolException

apply plugin: 'com.android.application'

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()
// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")
File debugKeyStoreFile, releaseKeyStoreFile
if (keystorePropertiesFile.canRead()) {
    // Load your keystore.properties file into the keystoreProperties object.
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    if (keystoreProperties != null) {
        debugKeyStoreFile = file(keystoreProperties['debugStoreFile'])
        releaseKeyStoreFile = file(keystoreProperties['releaseStoreFile'])
    }
} else {
    println '\'keystore.properties\' not found!'
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "tony.studenthomework"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debug {
            if (keystoreProperties != null) {
                try {
                    if (debugKeyStoreFile != null && debugKeyStoreFile.canRead()) {
                        keyAlias keystoreProperties['debugKeyAlias']
                        keyPassword keystoreProperties['debugKeyPassword']
                        storeFile debugKeyStoreFile
                        storePassword keystoreProperties['debugStorePassword']
                    }
                } catch (KeytoolException e) {
                    println '\'debug keystore\' not found! ' + e
                }
            }
        }
        release {
            if (keystoreProperties != null) {
                try {
                    if (releaseKeyStoreFile != null && releaseKeyStoreFile.canRead()) {
                        keyAlias keystoreProperties['releaseKeyAlias']
                        keyPassword keystoreProperties['releaseKeyPassword']
                        storeFile releaseKeyStoreFile
                        storePassword keystoreProperties['releaseStorePassword']
                    }
                } catch (KeytoolException e) {
                    println '\'release keystore\' not found! ' + e
                }
            }
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
        release {
            debuggable false
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.0-alpha3'
    implementation 'com.firebaseui:firebase-ui-auth:4.3.1'
    implementation 'com.google.firebase:firebase-core:16.0.8'
    implementation 'com.google.firebase:firebase-auth:16.2.0'
    implementation 'com.google.android.gms:play-services-auth:16.0.1'
    testImplementation 'junit:junit:4.12'
}

apply plugin: 'com.google.gms.google-services'